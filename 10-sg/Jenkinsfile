pipeline {
    agent { label 'jenkins-agent' }
    environment { 
        PROJECT = 'EXPENSE'
        COMPONENT = 'BACKEND' 
        DEPLOY_TO = "production"
    }
    options {
        timeout(time: 30, unit: 'MINUTES' ) //this for time out after soem time. 
        ansiColor('xterm')                  // this is for output colors
        disableConcurrentBuilds()           // 1 build is running if you press 2nd build it will wait until 1st build done
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Pick something')
    }
    stages {
        stage('Init') {
            steps {
               script{
                withAWS(region: 'us-east-1', credentials: 'aws') {
                    sh """
                        cd 10-sg
                        terraform init -reconfigure
                        terraform plan
                    """
                }
                 
               }
            }
        }
        stage('Apply-or-delete') {
            input {
                message "Should we continue to ${params.ACTION}"
                ok "Yes, we should."
            }
            steps {
               script{
                withAWS(region: 'us-east-1', credentials: 'aws') {
                    sh """
                        cd 10-sg
                        terraform apply -auto-approve
                    """
                }
                 
               }
            }
        }
        stage('Parallel Stages') {
            when { 
                expression { params.ACTION == 'apply'}
            }
            parallel {
                stage('20-bastion') {    
                    steps {
                        build job: '20-bastion', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                    }
                }
                stage('30-rds') {
                    steps {
                        build job: '30-rds', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                    }
                }
                stage('40-eks') {
                    steps {
                        build job: '40-eks', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                    }
                }
                stage('50-ecr') {
                    steps {
                        build job: '50-ecr', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                    }
                }
            }
        }
        stage('Sequential') {
            stages {
                stage('60-certificate') {
                    steps {
                        build job: '60-acm', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                    }
                }
                stage('70-alb') {
                    steps {
                        build job: '70-ingress-alb', parameters: [string(name: 'ACTION', value: 'apply')], wait: false
                    }
                }
            }
        }
    }
   
    post {
        always {
            echo " always show this "
            deleteDir() //it will delete the data of build which is in workspace 
        }
        success {
            echo " when it success " // when it succecs only
        }
        failure {
            echo " when it failure "  // when it faliure only
        }
    }
}