pipeline {
    agent { label 'jenkins-agent' }
    environment { 
        PROJECT = 'EXPENSE'
        COMPONENT = 'BACKEND' 
        DEPLOY_TO = "production"
    }
    options {
        timeout(time: 30, unit: 'MINUTES' ) //this for time out after soem time. 
        ansiColor('xterm')                  // this is for output colors
        disableConcurrentBuilds()           // 1 build is running if you press 2nd build it will wait until 1st build done
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy', 'plan'], description: 'Pick something')
    }
    stages {
        stage('Init') {
            steps {
               script{
                withAWS(region: 'us-east-1', credentials: 'aws') {
                    sh """
                        cd 70-alb
                        terraform init -reconfigure
                        terraform plan
                    """
                }
                 
               }
            }
        }
        stage('Apply-delete') {
            input {
                message "Should we continue to ${params.ACTION}"
                ok "Yes, we should."
            }
            steps {
               script{
                withAWS(region: 'us-east-1', credentials: 'aws') {
                    sh """
                        cd 0-vpc
                        if [ ${params.ACTION} == 'apply' ]
                        then
                            terraform apply -auto-approve
                        elif [ ${params.ACTION} == 'destroy' ]
                        then
                            terraform destroy -auto-approve
                        fi
                    """
                }
                 
               }
            }
        }
    }
    stage('trigger-sg'){
        steps{
            build job: '10-sg', parameters: [string(name:"ACTION", value: "apply")],wait = True //false when we dont want wait
        }
    }
     post {
        always {
            echo " always show this "
            deleteDir() //it will delete the data of build which is in workspace 
        }
        success {
            echo " when it success " // when it succecs only
        }
        failure {
            echo " when it failure "  // when it faliure only
        }
    }
}